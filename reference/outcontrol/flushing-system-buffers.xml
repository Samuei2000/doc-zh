<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 7610e990293c87168d026ad078d8272e643e2c23 Maintainer: mowangjuanzi Status: ready -->
<chapter xml:id="outcontrol.flushing-system-buffers" xmlns="http://docbook.org/ns/docbook">
 <section>
  <title>冲刷系统缓冲区</title>
  <para>
   PHP 提供了两种相关的方式来冲刷系统缓冲区（发送并丢弃内容）：通过调用 <function>flush</function>
   以及通过 <function>ob_implicit_flush</function> 或 &php.ini; 文件中的 <link
   linkend="ini.implicit-flush">implicit_flush</link> 设置来启用自动冲刷。
  </para>
  <para>
   如果禁用了自动冲刷，PHP 仅在调用 <function>flush</function> 或脚本结束时才会冲刷输出。
  </para>
  <para>
   如果启用了自动冲刷，PHP 将尝试在每段代码块产生输出之后进行冲刷。在此上下文中，输出是指非零长度的数据，即：
   <itemizedlist xml:id="outputcontrol.what-is-output">
    <listitem>
     <simpara>
      <literal>&#60;?php ?&#62;</literal> 标签之外的内容
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      由语言结构和函数打印，其明确目的是打印用户提供的变量或字符串，例如
      <function>echo</function>、<function>print</function>、<function>printf</function>、<function>var_dump</function>、<function>var_export</function>、<function>vprintf</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      由函数打印，其明确目的是收集和输出有关正在运行的脚本或者 PHP 的数据/信息，例如
      <function>debug_print_backtrace</function>、<function>phpcredits</function>、<function>phpinfo</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      当 PHP 出现未捕获的异常或未处理的错误时（取决于 <link linkend="ini.display-errors">display_errors</link> 和
      <link linkend="ini.error-reporting">error_reporting</link> 的设置），会打印出相关信息。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      任何写入到 <literal>php://output</literal> 的内容
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <note>
   <simpara>
    打印空字符串或发送头部信息不会视为输出，因此不会导致冲刷操作。
   </simpara>
  </note>
  <warning>
   <simpara>
    如果启用了自动冲刷，控制字符（如 <literal>"\n"</literal>、<literal>"\r"</literal>、<literal>"\0"</literal>）也将触发冲刷操作。
   </simpara>
  </warning>
 </section>

 <section>
  <title>限制</title>
  <para>
   此功能无法冲刷用户级输出缓冲区。要一起使用的话，必须在冲刷系统缓冲区之前冲刷用户级输出缓冲区，以便 PHP 生成任何输出。
  </para>
  <warning>
   <simpara>
    调用 <function>flush</function> 或启用绝对刷新可能会干扰用户级输出缓冲区的输出处理程序，这些输出处理程序在 Web
    上下文中设置和发送 header（例如 <function>ob_gzhandler</function>），因为在这些处理程序能够发送 header
    之前，<function>flush</function> 或绝对刷新就已经发送了 header 信息。
   </simpara>
  </warning>
  <para>
   PHP 不能完整覆盖由底层软件/硬件实现的缓冲，在使用 PHP 的缓冲控制函数时应考虑到这一点。检查 Web
   服务器/浏览器/控制台缓冲设置并进行相应的处理可以缓解可能的问题。在 Web 环境中工作时，可以调整 Web
   服务器的缓冲设置或脚本的缓冲以协同工作，而调整 PHP 脚本中的缓冲设置可以解决各种浏览器的缓冲策略。在实现行缓冲的控制台上，可以在刷新输出之前将换行符插入到适当的位置。
  </para>
 </section>

 <section>
  <title><acronym>SAPI</acronym> 在冲刷方面的不同</title>
  <para>
   尽管每个 <acronym>SAPI</acronym> 实现冲刷的方式略有不同，但这些实现都属于以下两类中的一个：
   <itemizedlist>
    <listitem>
     <simpara>
      Web 上下文中使用的 <acronym>SAPI</acronym> 将首先冲刷 header，然后冲刷输出。<literal>Apache2Handler</literal>、<literal>CGI</literal>、<literal>FastCGI</literal>
      和 <literal>FPM</literal> 都是此类 <acronym>SAPI</acronym>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      其它 <acronym>SAPI</acronym>（比如 <literal>CLI</literal> 和 <literal>embed</literal>）仅冲刷输出
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </section>

</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
